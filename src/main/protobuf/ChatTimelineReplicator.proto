syntax = "proto3";
package chatter.actors.typed.Replicator.v1;

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";
import "v1.proto";

option (scalapb.options) = {
    single_file: true
    flat_package: true
    preamble: "sealed trait ReplicatorCommand"
};

message WriteMessagePB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string chatName = 1;
    int64 when = 2;
    string tz = 3;
    int64 authId = 4;
    string content = 5;
    //ActorRef[WriteResponses]
    bytes replyTo = 6;
}

message ReadChatTimelinePB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string chatName = 1;
    //ActorRef[ReadReply]
    bytes replyTo = 2;
}

message RWriteSuccessPB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string chatName = 1;
    //ActorRef[WriteResponses]
    bytes replyTo = 2;
}

message RWriteFailurePB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string chatName = 1;
    string errorMsg = 2;
    //ActorRef[WriteResponses]
    bytes replyTo = 3;
}

message RWriteTimeoutPB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string chatName = 1;
    //ActorRef[WriteResponses]
    bytes replyTo = 2;
}

message RChatTimelineReplyPB {
    option (scalapb.message).extends = "ReplicatorCommand";
    repeated MessagePB history = 1;
    //ActorRef[ReadReply]
    bytes replyTo = 2;
}

message RNotFoundChatTimelineReplyPB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string chatName = 1;
    // ActorRef[ReadReply]
    bytes replyTo = 2;
}

message RGetFailureChatTimelineReplyPB {
    option (scalapb.message).extends = "ReplicatorCommand";
    string error = 1;
    //ActorRef[ReadReply]
    bytes replyTo =2 ;
}